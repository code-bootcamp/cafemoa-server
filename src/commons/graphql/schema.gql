# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CafeInform {
  id: String!
  cafeinfo: String!
  closedDay: String!
  operatingTime: String!
  cafeAddr: String!
  lat: Float!
  lng: Float!
}

type Category {
  id: String!
  category: String!
}

type Comment {
  id: String!
  reply: String!
  like: Int!
  cafeaddr: String!
  tag: String!
  brandname: String!
  createAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Owner {
  id: String!
  name: String!
  email: String!
  personalNum: String!
  phone: String!
  brandName: String!
}

type Query {
  fetchComments: [Comment!]!
  fetchComment(commentId: String!): Comment!
  fetchCategory: [Category!]!
  fetchOwners: [Owner!]!
  fetchOwner(ownerID: String!): Owner!
  fetchCafeInform(cafeInformID: String!): CafeInform!
}

type Mutation {
  createComment(createCommentinput: createCommentInput!, ownerId: String!): Comment!
  updateComment(commentId: String!, UpdateCommentInput: UpdateCommentInput!): Comment!
  deleteComment(commentId: String!): Boolean!
  createCategory(category: String!): Category!
  deleteCategory(categoryId: String!): Boolean!
  CreateOwner(createOwnerInput: OwnerInput!): Owner!
  deleteOwner(ownerID: String!): Boolean!
  updateOwner(updateOwnerInput: OwnerUpdateInput!, ownerID: String!): Owner!
  updateCafeInform(updateCafeInform: UpdateCafeInform!, CafeInformID: String!): CafeInform!
}

input createCommentInput {
  reply: String!
  like: Int!
  cafeaddr: String!
  tag: String!
  brandname: String!
}

input UpdateCommentInput {
  reply: String
  like: Int
  cafeaddr: String
  tag: String
  brandname: String
}

input OwnerInput {
  name: String!
  email: String!
  personalNum: String!
  phone: String!
  brandName: String!
  cafeInformInput: CafeInformInput!
}

input CafeInformInput {
  id: String
  cafeinfo: String
  closedDay: String
  operatingTime: String
  cafeAddr: String
  lat: Float
  lng: Float
}

input OwnerUpdateInput {
  name: String
  email: String
  phone: String
  brandName: String
  password: String
  ownerPassword: String
}

input UpdateCafeInform {
  cafeinfo: String
  closedDay: String
  operatingTime: String
  cafeAddr: String
  lat: Float
  lng: Float
}